#!/usr/bin/env node

const fs = require("fs");
const path = require("path");
const args = require("args");

const {
  addGzip,
  addTotals,
  chunkGroupsConsoleTableRows,
  chunkGroupsMarkDownTable,
  getSummary,
  consoleTable
} = require("../dist");

args
  .option(
    "stats",
    "The location of the stats file generated by webpack using the --json option [./stats.json]",
    path.join(process.cwd(), "stats.json")
  )
  .option(
    "output",
    "console/markdown dump to the console or create webpack-stats-summary.md [console]"
  )
  .option(["c", "includeChunks"], "list individual chunk sizes [false]")
  .option("buildPath", "path to the build [stats.outputPath]");

const options = args.parse(process.argv);

const stats = require(options.stats);

const summary = getSummary(stats);
addGzip(summary, options.buildPath || stats.outputPath).then(summ => {
  summ = addTotals(summ);

  if (options.output === "markdown") {
    fs.writeFileSync(
      "webpack-stats-summary.md",
      chunkGroupsMarkDownTable(summ, { includeChunks: options.includeChunks })
    );
  } else {
    const table = consoleTable({ includeChunks: options.includeChunks });
    const rows = chunkGroupsConsoleTableRows(summ, {
      includeChunks: options.includeChunks
    });
    table.push(...rows);
    console.log(table.toString());
  }
});
